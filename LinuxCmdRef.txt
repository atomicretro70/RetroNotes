##############################################################################
##############################################################################
##############################################################################
##############################################################################
######                                                                  ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
######          ##############################################          ######
######          ##############################################          ######
######          ###                                        ###          ######
######          ###              Retro Notes               ###          ######
######          ###                                        ###          ######
######          ###           Linux Command Line           ###          ######
######          ###                                        ###          ######
######          ##############################################          ######
######          ##############################################          ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
######                     AtomicRetro@outlook.com                      ######
######                                                                  ######
######                     Revision:  20.10.05                          ######
######                                                                  ######
######                                                                  ######
######                                                                  ######
##############################################################################
##############################################################################
##############################################################################
##############################################################################

....|....1....|....2....|....3....|....4....|....5....|....6....|....7....|...


==============================
To View This Document Properly
==============================
* Best if viewed in VIM using with settings
     :set columns=80
     :set encoding=utf-8

* This document must be viewed with a mono-spaced font to enjoy the layout,
  tables and diagrams.

* This document must be viewed in an editor that can display unicode utf-8.


||||| Typographic Conventions ||||||||||||||||||||||||||||||||||||||||||||||||
...                 arbitrary text
[...]               some optional text
<...>               a special key, options include
                    <CTRL>     the control key
                    <TAB>      the tab key
                    <CR>       the enter or return key
                    <ALT>      the alt key
                    <SUPER>    the super key (start key on windows computers)
                    <ARROW>    an arrow key
<...>               that ought to be replaced by something else.
<cmd> ...           a command, see the man page for usage
^X                  a key chord of <CTRL> + 'X'.

||||| Manual Pages |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

man <cmd>           display the manual for a command cmd
man man             help on the manual
man hier            help on the file system
man <sect> <topic>  display man page for topic in specified section
man 7 signal        manual page for signals

      Section
      1   Executable programs or shell commands
      2   System calls (functions provided by the kernel)
      3   Library calls (functions within program libraries)
      4   Special files (usually found in /dev)
      5   File formats and conventions, e.g. /etc/passwd
      6   Games
      7   Miscellaneous (including macro packages and conventions)
      8   System administration commands (usually only for root)
      9   Kernel routines [Non standard]

||||| Shell & Terminal |||||||||||||||||||||||||||||||||||||||||||||||||||||||

^A                  go to the beginning of the command line
^E                  go to the end of the command line
^F                  go forward by a word
^B                  go backwards by a word
^W                  cut one word before cursor, put into clipboard
^U                  cut the whole line, put into clipboard
^Y                  paste from clipboard
<TAB>               auto-complete filename
<TAB> <TAB>         list auto-complete options

!!                  most recent command
<arrow up/down>     previous/next command
history             show a history of commands
^R                  recall last command that matches provided characters

ssh ...             open remote (on another machine) login session
telnet ...          open remote login session

exit                exit the shell
exit n              exit script with exit code n
^D                  exit the shell

^Z                  mark the end of a file

||||| File and Directory Names |||||||||||||||||||||||||||||||||||||||||||||||

<name>.<ext>        a normal file; ext is some extension usually 3 letters
.<name>             a hidden file or directory name
*cal                any filename ending in 'cal'
cal*                any filename beginning in 'cal'
ca*l                any filename beginning in 'ca' and ending in 'l'.

||||| Files & Directories ||||||||||||||||||||||||||||||||||||||||||||||||||||

ls                  listing of current directory
ls -al              long listing of everything
pwd                 Print Working Directory
cd <dir>            change directory to dir
cd                  change directory to ~ (your home directory)
mkdir <dir>         make a new subdirectory
rmdir <dir>         remove an empty directory
rm <name>           remove files and directories
rm -r <name>        remove files and directories recursively
cp <file1> <file2>  copy file1 to file2
mv <file> <target>  move/rename file

touch <file>        create a file/change existing file timestamp
link ...            create a link to a file
ln -s <file> <link> create a symbolic link to file

chown ...           change file owner and group
chmod ...           change file permiessions

find ...            find a file
which <app>         searching PATH locate a command

comm ...            compare two sorted files for common lines
cmp ...             compare two files byte by byte
diff <file> <file>  compute the difference of two text files
rsync ...           synchronize files and directories

tar ...             the tape archive command
tar -zcvf <dir>     archive and compress the argument verbosely
tar -zxvf <file>    decompress and dearchive file(s) verbosely
gzip ...            compress/decompress a file
zip/unzip           compress/decompress file
gpg -c file         encrypt a file
gpg file            decrypt a file

||||| Display & Filters ||||||||||||||||||||||||||||||||||||||||||||||||||||||

clear               clear the terminal window
^L                  clear the terminal window
echo <arg>          print the argument to the screen

cat <file> [...]    concatenate files to stdout
more <file>         paginate file contents
less <file>         display file contents, navigate like vi (replaces more)
head <file>         print the first 10 lines of a file
tail <file>         print the last 10 lines of a file
tail -f <file>      print file as it grows starting with last 10 lines

grep ...            find lines containing ... from stdin
cut ...             expects lines separated into fields, returns a field
sort ...            sort the lines in stdin
uniq ...            print only unique lines
wc ...              word count - count lines, words, characters
wc -l               print the number of lines from stdin
wc -m               print the number of characters from stdin
wc -w               print the number of words from stdin
awk ...             scripted filtering
sed ...             scripted stream editing

xargs ...           treat lines from stdin as args to a command
tee ...             copy stdin to each file and also to stdout

||||| Jobs & Processes |||||||||||||||||||||||||||||||||||||||||||||||||||||||

^C                  terminate the current running process
^Z                  background the current job

jobs                list the active jobs
bg                  list background jobs
fg                  bring most recent job to the foreground
fg n                bring job n to the foreground

top                 running application list (updated in real time)
ps                  process list
ps aux              ps but more convenient information
pstree              processes in a tree
kill ...            send a signal to a process
kill -9 <pid>       terminate the process by process id
killall <name>      terminate all processes by name
xkill               use mouse to kill a window's connection to its process

sudo <cmd>          execute command as another user
sudo -i             sudo interactive (stay in root)
nice ...            run a process with a non-default priority
renice ...          chance the priority of a process

crontab             list scheduled processes

      Process States
      running
      sleeping
      zombie
      stopped

      Info on running processes in dir
      /proc/<pid>

||||| Users & Accounts |||||||||||||||||||||||||||||||||||||||||||||||||||||||

who                 who's logged onto the system right now
w                   like who, but more verbose
whoami              print my username
who am i            like 'who' but more information
id                  list my username, userid and my groups
last                last system logins

groups <user>       list a user's groups
groupadd <name>     add a new group

useradd ...         add a user
adduser ...         add a user via a gui
newusers ...        create multiple new user accounts simultaneously
userdel ...         delete a user 
usermod ...         change a user information
usermod -aG <grp> <usr>  Add a user to a group
passwd              change your password

      /etc/passwd   User account file
      /etc/shadow   User password file

||||| Sockets & Handles ||||||||||||||||||||||||||||||||||||||||||||||||||||||

netstat ...         display network connections and ports
netstat -tupln
sudo netstat -tupln more info
ifconfig            display/modify network adapter settings
ping <host>         ping a host to see if it's responding
dig ...             interrogate the DNS
nslookup ...        query internet name service
lsof                list open file handles
traceroute <host>   list the route from this machine to a host

||||| System |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

date                print the current date & time
uptime              print the current uptime
uname -a            print kernel information
hostname            print the hostname
hostname -i         print the host's ip address
lshw                list hardware config information
lsblk               list the block devices
lspci               list the pci devices
lsusb               list the usb devices
last reboot         print reboot history

free                show memory and swap usage
df                  list what's mounted
du                  list the estimated disk usage by files
fdisk -l            print disk partitions, sizes and types

mount ...           mount a device
umount ...          unmount a device

shutdown            shutdown the computer
reboot              reboot the computer
halt                halt, poweroff, reboot

set ...             list, set or unset shell options
varname=<val>       set a variable to a value (can't have spaces)
env ...             print or set environment variables
alias <name>=<val>  create an alias for a value (usually a long command)

||||| Command Line Apps ||||||||||||||||||||||||||||||||||||||||||||||||||||||

cal                 display a calendar for the current month
mail                send some mail
bc                  command line calculator
dc                  command line rpn calculator
factor <num>        display prime factors of a number

||||| Novelty ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

figlet ...          prints strings in ascii art
figlet -f <font> <text>  print text in ascii art
figlist             list the fonts available to figlet
showfigfonts        demonstrates each of the available figlet fonts
toilet ...          figlet clone that also does other things.

lolcat ...          colorizes input content

||||| application management (Debian, Ubuntu, Pop! OS) |||||||||||||||||||||||

sudo apt update               retrieve list of available updates
sudo apt upgrade              apply the updates
sudo apt-get install <app>    install an app
sudo apt-cache search <str>   search for all available apps containging string
sudo apt-get remove <app>     uninstall an app
sudo apt autoremove           automatically remve unused libraries
sudo apt full-upgrade         perform a full upgrade of the OS

upgrade the OS
   sudo apt update
   sudo apt full-upgrade
   pop-upgrade release upgrade

==================
Command Line Usage
==================

||||| Backgrounding ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

<cmd> &             run cmd in the background

||||| Multiple Commands and Logic ||||||||||||||||||||||||||||||||||||||||||||

<cmd1>; <cmd2>      run cmd1 then run cmd2
<cmd1> && <cmd2>    if cmd1 succeeds run cmd2
<cmd1> || <cmd2>    if cmd1 fails run cmd2
(<cmd1> && <cmd2>)  association operators

||||| Redirection of Input/Output ||||||||||||||||||||||||||||||||||||||||||||

<cmd> > <file>      write stdout of cmd to file
<cmd> > /dev/null   write stdout to nowhere
<cmd> >> <file>     append stdout of cmd to file
<cmd> n> <file>     write what cmd outputs to file descriptor n, to file
                       Predefined file descriptors
                       0    stdin
                       1    stdout
                       2    stderr
<cmd> >& <file>     write stdout and stderr to file
                    instead.

<cmd> < <file>      run cmd using file contents as stdin

<cmd1> | <cmd2>     PIPE (send) stdout of cmd1 to stdin for cmd2

================
Bash Programming
================

||||| Variables & Quoting ||||||||||||||||||||||||||||||||||||||||||||||||||||

reference a variable with    $varname

set a variable with
   myvar="some text"
       ^^^
     no spaces

   mynum=10

echo "my number is $mynum"

echo "this is my ${mynum}th beer"

echo "there are `wc -l < /etc/shadow` of lines in the /etc/shadow"
                ^^^^^^^^^^^^^^^^^^^^^
        backquotes for the result of the command


numlines=`ls $HOME | wc -l`

||||| How scripts work |||||||||||||||||||||||||||||||||||||||||||||||||||||||

scripts begin with
#!/bin/bash

scripts end with exit.

    exit 0   <-- return value.  0 means no errors, success

    exit 1   

    exit $?  <-- return the return value of the last command executed

source calls another shell script to run
. is an alias for source

arguments
   $#         is the number of args that our script was given
   $0         is the filename of the script
   $1...$n    the arguments

if statements (new style test - nicer syntax)

if [[ condition ]]; then
   # statements
fi

if statements (old style test - more portable)

if [ condition ]; then
   # statements
fi

if [ "$NAME" = "Dave" ]; then
   echo "Hi Dave!"
fi


if [ "$NAME" = "Dave" ]; then
   echo "Hi Dave!"
elif [ "$NAME" = "Steve" ]; then
   echo "Tip of the hat"
else
   echo "slow head shake"
fi

    =     is equal to
    !=    is not equal to
    -lt   is less than
